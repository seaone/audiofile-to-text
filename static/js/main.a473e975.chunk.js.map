{"version":3,"sources":["api/index.ts","App.tsx","index.tsx"],"names":["uploadFile","a","file","lang","data","FormData","append","fetch","process","method","body","then","res","json","catch","error","useStyles","makeStyles","container","paddingTop","formBox","display","alignItems","gap","marginBottom","paper","padding","button","height","inputWrapper","flexGrow","box","loader","position","top","left","marginTop","marginLeft","audio","width","App","useState","recognizedText","setRecognizedText","keywords","setKeywords","audioSrc","setAudioSrc","isProcessing","setIsProcessing","setFile","isFileSelected","setIsFileSelected","language","setLanguage","setError","isErrorDisplayed","setIsErrorDisplayed","handleProcessButtonClick","clear","fileSrc","name","Date","now","text","map","keyword","join","console","isUploadButtonEnabled","isTextInputEnabled","isLanguageSelectEnabled","isProcessButtonEnabled","classes","className","Container","maxWidth","Typography","variant","component","gutterBottom","Box","FormControl","FormHelperText","Button","disabled","type","accept","hidden","onChange","event","fileInput","currentTarget","files","length","TextField","size","InputProps","readOnly","value","sx","minWidth","Select","displayEmpty","target","MenuItem","onClick","CircularProgress","Paper","controls","src","Snackbar","open","message","onClose","reason","autoHideDuration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a473e975.chunk.js","sourcesContent":["type uploadFormParams = {\n  file: File;\n  lang: string;\n};\n\nexport const uploadFile = async ({ file, lang }: uploadFormParams) => {\n  const data = new FormData();\n  data.append(\"file\", file);\n  data.append(\"lang\", lang);\n\n  return fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/cgi-bin/result.py`, {\n    method: \"post\",\n    body: data,\n  })\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n","import { ChangeEvent, SyntheticEvent, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Container,\n  FormControl,\n  FormHelperText,\n  MenuItem,\n  Paper,\n  Select,\n  SelectChangeEvent,\n  Snackbar,\n  SnackbarCloseReason,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { uploadFile } from \"./api\";\n\ntype Keyword = [string, number];\n\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: \"4rem\",\n  },\n  formBox: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    gap: \"1rem\",\n    marginBottom: \"2rem\",\n  },\n  paper: {\n    padding: \"2rem\",\n  },\n  button: { height: \"40px\" },\n  inputWrapper: {\n    flexGrow: 1,\n  },\n  box: {\n    marginBottom: \"2rem\",\n  },\n  loader: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: \"-12px\",\n    marginLeft: \"-12px\",\n  },\n  audio: {\n    width: \"100%\",\n  },\n});\n\nfunction App() {\n  const [recognizedText, setRecognizedText] = useState(\"\");\n  const [keywords, setKeywords] = useState(\"\");\n  const [audioSrc, setAudioSrc] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [file, setFile] = useState<File | null>(null);\n  const [isFileSelected, setIsFileSelected] = useState(false);\n  const [language, setLanguage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isErrorDisplayed, setIsErrorDisplayed] = useState(false);\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const fileInput: HTMLInputElement | null = event.currentTarget;\n    setFile(null);\n    setLanguage(\"\");\n    setIsFileSelected(false);\n\n    if (fileInput?.files && fileInput?.files.length > 0) {\n      const file = fileInput.files[0];\n      setFile(file);\n      setIsFileSelected(true);\n    }\n  };\n\n  const handleSelectChange = (event: SelectChangeEvent) => {\n    setLanguage(event.target.value);\n  };\n\n  const handleProcessButtonClick = async () => {\n    setIsProcessing(true);\n    clear();\n\n    if (file != null) {\n      const fileSrc = `${process.env.REACT_APP_BACKEND_ENDPOINT}/files/${\n        file.name\n      }?updated=${Date.now()}`;\n\n      try {\n        const json = await uploadFile({\n          file: file,\n          lang: language,\n        });\n\n        setAudioSrc(fileSrc);\n        setRecognizedText(json.text);\n        setKeywords(\n          json.keywords.map((keyword: Keyword) => keyword[0]).join(\", \")\n        );\n      } catch (error) {\n        setError(\"Something went worng :(\");\n        setIsErrorDisplayed(true);\n        clear();\n\n        console.error(error);\n      }\n    }\n\n    setIsProcessing(false);\n  };\n\n  const handleSnackbarClose = (\n    event: SyntheticEvent,\n    reason: SnackbarCloseReason\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsErrorDisplayed(false);\n  };\n\n  const isUploadButtonEnabled = !isProcessing;\n\n  const isTextInputEnabled = !isProcessing;\n\n  const isLanguageSelectEnabled = !isProcessing && isFileSelected;\n\n  const isProcessButtonEnabled =\n    !isProcessing && isFileSelected && language !== \"\";\n\n  const clear = () => {\n    setAudioSrc(\"\");\n    setRecognizedText(\"\");\n    setKeywords(\"\");\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <Container className={classes.container} maxWidth=\"md\">\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n          Audiofile to text\n        </Typography>\n\n        <Box className={classes.formBox}>\n          <FormControl>\n            <FormHelperText>Select file</FormHelperText>\n\n            <Button\n              component=\"label\"\n              variant=\"outlined\"\n              disabled={!isUploadButtonEnabled}\n              className={classes.button}\n            >\n              Upload File (.wav)\n              <input\n                type=\"file\"\n                accept=\"audio/wav\"\n                hidden\n                onChange={handleInputChange}\n              />\n            </Button>\n          </FormControl>\n\n          <FormControl className={classes.inputWrapper}>\n            <TextField\n              size=\"small\"\n              variant=\"standard\"\n              disabled={!isTextInputEnabled}\n              InputProps={{\n                readOnly: true,\n              }}\n              value={file !== null ? file.name : \"\"}\n            />\n          </FormControl>\n\n          <FormControl sx={{ minWidth: \"100px\" }}>\n            <FormHelperText>Choose Language</FormHelperText>\n\n            <Select\n              size=\"small\"\n              displayEmpty\n              value={language}\n              disabled={!isLanguageSelectEnabled}\n              onChange={handleSelectChange}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={\"en\"}>En</MenuItem>\n              <MenuItem value={\"ru\"}>Ru</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <Button\n              variant={\"contained\"}\n              disabled={!isProcessButtonEnabled}\n              onClick={handleProcessButtonClick}\n              className={classes.button}\n            >\n              Process\n            </Button>\n\n            {isProcessing && (\n              <CircularProgress size={24} className={classes.loader} />\n            )}\n          </FormControl>\n        </Box>\n\n        {recognizedText !== \"\" && (\n          <Paper variant=\"outlined\" className={classes.paper}>\n            <Box className={classes.box}>\n              <audio controls src={audioSrc} className={classes.audio} />\n            </Box>\n\n            <Box className={classes.box}>\n              <Typography variant=\"body1\" gutterBottom>\n                <strong>Text:</strong> {recognizedText}\n              </Typography>\n            </Box>\n\n            <Box>\n              <Typography variant=\"body2\">\n                <strong>Keywords:</strong> {keywords}\n              </Typography>\n            </Box>\n          </Paper>\n        )}\n\n        <Snackbar\n          open={isErrorDisplayed}\n          message={error}\n          onClose={handleSnackbarClose}\n          autoHideDuration={3000}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}